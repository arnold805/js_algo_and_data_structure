Smaller terms don't matter

  No!               Yes!

O(n + 10)          O(n)
O(1000n + 50)      O(n)
O(n^2 + 5n + 8)    O(n^2)


1. Arithmetic operations are constant
2. Variable assignment is constant
3. Accessing elements in an array (by index) or object(by key) is constant
4. In a loop, the complexity is the length of the loop times the complexity
   of whatever happens inside the loop.


Auxiliary space complexity -  space required by the algorithm,
                              not including the space taken up by the inputs

- most primitives (booleans, numbers, undefined, null) are constant space [ O(1) ] 
- strings require O(n) space (where n is the string length)
- reference types are generally O(n), where n is the length (for arrays) or the number of keys (for objects)

- logarithmic time complexity is great!